on: release
name: Build Release
jobs:
  release-linux-amd64:
    name: release linux/amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: compile and release
        uses: ngs/go-release.action@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOARCH: amd64
          GOOS: linux
          EXTRA_FILES: "LICENSE"

  release-linux-arm:
    name: release linux/386
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: compile and release
        uses: ngs/go-release.action@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOARCH: "arm"
          GOOS: linux
          EXTRA_FILES: "LICENSE"

  release-linux-arm64:
    name: release linux/amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: compile and release
        uses: ngs/go-release.action@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOARCH: arm64
          GOOS: linux
          EXTRA_FILES: "LICENSE"

  release-darwin-amd64:
    name: release darwin/amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: compile and release
        uses: ngs/go-release.action@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOARCH: amd64
          GOOS: darwin
          EXTRA_FILES: "LICENSE"

  release-windows-amd64:
    name: release windows/amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: compile and release
        uses: ngs/go-release.action@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOARCH: amd64
          GOOS: windows
          EXTRA_FILES: "LICENSE"

  release-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=jmriebold/sqs-prometheus-exporter
          VERSION=${GITHUB_REF#refs/tags/v}
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:latest"
          echo ::set-output name=tags::${TAGS}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
